    # ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'restore'
    projects: '**/*.csproj'
   # feedsToUse: 'config'
 
# - script: dotnet build --configuration $(buildConfiguration)
#   displayName: 'dotnet build $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'publish'
#     publishWebProjects: true
#     arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True
# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'publish'
#     publishWebProjects: true
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/asp-dotnet-core-angular.Test/*.csproj'
    #arguments: '--configuration $(buildConfiguration)'

- task: efcore-migration-script-generator-task@0
  inputs:
    projectpath: '/application/asp-dotnet-core-angular.csproj'
    databasecontexts: 'VegaDbContext'
    targetfolder: '$(build.artifactstagingdirectory)/migrations'
- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'sample_angular'
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true